class Solution {
    public String longestPalindrome(String s) {
       
       if(s.equals("")){
            return "";
        }

        int n = s.length();

        //记录 s[i,j] 是不是回文
        boolean[][] states = new boolean[n][n];

        //记录最长回文子串的两端
        int lo = 0;
        int hi = 0;

        //初始化对角线
        for(int i = 0 ; i < n ; i++){
            states[i][i] = true;
        }

        //初始化对角线的上一斜线
        for(int i = 0 ; i < n-1 ; i++){
            if( s.charAt(i) == s.charAt(i+1) ){
                states[i][i+1] = true;
                lo = i;
                hi = i+1;
            }
        }

        //递推
        for(int j = 2 ; j < n ; j++){
            for(int i = 0 ; i < j-1; i++){
                states[i][j] = (s.charAt(i) == s.charAt(j)) && states[i + 1][j - 1];
                if(states[i][j] && j-i+1 > hi-lo+1){
                    lo = i;
                    hi = j;
                }
            }
        }

        return s.substring(lo,hi+1);
    }
}
